#if UNITY_EDITOR
using UnityEditor;
using System.IO;
#endif
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


[CreateAssetMenu(fileName = "PrefabDatabase", menuName = "Game Data/Prefab Database")]
public class PrefabDatabase : ScriptableObject
{
    
    [System.Serializable]
    public struct PrefabEntry
    {
        public string name;
        public int id;
        public GameObject prefab;
    }

    public List<PrefabEntry> entries = new List<PrefabEntry>();

    private Dictionary<int, GameObject> _lookup;

    
    /// <summary>
    /// 获取Prefab（运行时自动构建字典）
    /// </summary>
    public GameObject GetPrefabById(int id)
    {
        if (_lookup == null)
        {
            _lookup = new Dictionary<int, GameObject>();
            foreach (var entry in entries)
            {
                if (!_lookup.ContainsKey(entry.id))
                    _lookup[entry.id] = entry.prefab;
                else
                    Debug.LogWarning($"重复的Prefab ID: {entry.id}");
            }
        }

        _lookup.TryGetValue(id, out var prefab);
        return prefab;
    }

    
    
#if UNITY_EDITOR
    private void OnValidate()
    {
        string path = "Assets/Scripts/AutoGenerated/PrefabIDs.cs";
        Directory.CreateDirectory(Path.GetDirectoryName(path));

        using (StreamWriter sw = new StreamWriter(path))
        {
            sw.WriteLine("// Auto-generated by PrefabDatabase");
            sw.WriteLine("public static class PrefabIDs");
            sw.WriteLine("{");

            foreach (var entry in entries)
            {
                if (string.IsNullOrEmpty(entry.name)) continue;
                sw.WriteLine($"    public const int {entry.name} = {entry.id};");
            }

            sw.WriteLine("}");
        }

        AssetDatabase.Refresh();
    }
#endif
}
